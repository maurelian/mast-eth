/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleScript4,
  ExampleScript4Interface,
} from "../ExampleScript4";

const _abi = [
  {
    inputs: [],
    name: "lastAction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numActions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610519806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063506623c7146100515780638514668f1461007257806389f71d5314610090578063c0406226146100b1575b600080fd5b6100596100cf565b60405161006994939291906102f5565b60405180910390f35b61007a610195565b604051610087919061035c565b60405180910390f35b61009861019b565b6040516100a894939291906102f5565b60405180910390f35b6100b9610261565b6040516100c69190610341565b60405180910390f35b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461010c90610442565b80601f016020809104026020016040519081016040528092919081815260200182805461013890610442565b80156101855780601f1061015a57610100808354040283529160200191610185565b820191906000526020600020905b81548152906001019060200180831161016857829003601f168201915b5050505050908060030154905084565b60085481565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546101d890610442565b80601f016020809104026020016040519081016040528092919081815260200182805461020490610442565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b5050505050908060030154905084565b600062015180600060030154426102789190610393565b1115610287576001905061028c565b600090505b90565b610298816103c7565b82525050565b6102a7816103d9565b82525050565b60006102b882610377565b6102c28185610382565b93506102d281856020860161040f565b6102db816104d2565b840191505092915050565b6102ef81610405565b82525050565b600060808201905061030a600083018761028f565b61031760208301866102e6565b818103604083015261032981856102ad565b905061033860608301846102e6565b95945050505050565b6000602082019050610356600083018461029e565b92915050565b600060208201905061037160008301846102e6565b92915050565b600081519050919050565b600082825260208201905092915050565b600061039e82610405565b91506103a983610405565b9250828210156103bc576103bb610474565b5b828203905092915050565b60006103d2826103e5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561042d578082015181840152602081019050610412565b8381111561043c576000848401525b50505050565b6000600282049050600182168061045a57607f821691505b6020821081141561046e5761046d6104a3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f830116905091905056fea264697066735822122019a724b724b47263ab9a2eeb6bbbf64c4d2f3d5cc9c9083d5d7617167ac4c9d064736f6c63430008040033";

type ExampleScript4ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleScript4ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleScript4__factory extends ContractFactory {
  constructor(...args: ExampleScript4ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleScript4> {
    return super.deploy(overrides || {}) as Promise<ExampleScript4>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExampleScript4 {
    return super.attach(address) as ExampleScript4;
  }
  connect(signer: Signer): ExampleScript4__factory {
    return super.connect(signer) as ExampleScript4__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleScript4Interface {
    return new utils.Interface(_abi) as ExampleScript4Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleScript4 {
    return new Contract(address, _abi, signerOrProvider) as ExampleScript4;
  }
}
