/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ScriptTree, ScriptTreeInterface } from "../ScriptTree";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_scriptsRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "scriptHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ScriptSpent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_script",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scriptsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052604051610bfa380380610bfa83398181016040528101906100259190610048565b806080818152505050610092565b6000815190506100428161007b565b92915050565b60006020828403121561005a57600080fd5b600061006884828501610033565b91505092915050565b6000819050919050565b61008481610071565b811461008f57600080fd5b50565b608051610b476100b360003960008181608f015261017b0152610b476000f3fe60806040526004361061002d5760003560e01c80638159f2b314610039578063a65ca6cb1461006457610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e61008d565b60405161005b9190610845565b60405180910390f35b34801561007057600080fd5b5061008b600480360381019061008691906105d3565b6100b1565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600084846040516100c3929190610815565b604051809103902090506001151560008083815260200190815260200160002060009054906101000a900460ff1615151415610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b90610860565b60405180910390fd5b6101a0838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f00000000000000000000000000000000000000000000000000000000000000008361040d565b6101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d6906108a0565b60405180910390fd5b600061022e86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506104e9565b90506000808273ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc0406226000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102da919061082e565b600060405180830381855af49150503d8060008114610315576040519150601f19603f3d011682016040523d82523d6000602084013e61031a565b606091505b5091509150600081806020019051810190610335919061069f565b90508280156103415750805b610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610880565b60405180910390fd5b600160008087815260200190815260200160002060006101000a81548160ff0219169083151502179055508c73ffffffffffffffffffffffffffffffffffffffff16857fdbc943c79a3d5098d686bd8ced8c088938fd3948d584fdbb6a38484d422e24e48e8e8e6040516103f6939291906108c0565b60405180910390a350505050505050505050505050565b60008082905060005b85518110156104db57600086828151811061045a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905080831161049b57828160405160200161047e9291906107e9565b6040516020818303038152906040528051906020012092506104c7565b80836040516020016104ae9291906107e9565b6040516020818303038152906040528051906020012092505b5080806104d3906109be565b915050610416565b508381149150509392505050565b6000808251602084016000f0905080915050919050565b60008135905061050f81610acc565b92915050565b60008083601f84011261052757600080fd5b8235905067ffffffffffffffff81111561054057600080fd5b60208301915083602082028301111561055857600080fd5b9250929050565b60008151905061056e81610ae3565b92915050565b60008083601f84011261058657600080fd5b8235905067ffffffffffffffff81111561059f57600080fd5b6020830191508360018202830111156105b757600080fd5b9250929050565b6000813590506105cd81610afa565b92915050565b60008060008060008060008060a0898b0312156105ef57600080fd5b60006105fd8b828c01610500565b985050602061060e8b828c016105be565b975050604089013567ffffffffffffffff81111561062b57600080fd5b6106378b828c01610574565b9650965050606089013567ffffffffffffffff81111561065657600080fd5b6106628b828c01610574565b9450945050608089013567ffffffffffffffff81111561068157600080fd5b61068d8b828c01610515565b92509250509295985092959890939650565b6000602082840312156106b157600080fd5b60006106bf8482850161055f565b91505092915050565b6106d181610948565b82525050565b6106e86106e382610948565b610a07565b82525050565b60006106fa83856108fd565b935061070783858461097c565b61071083610a40565b840190509392505050565b6000610727838561090e565b935061073483858461097c565b82840190509392505050565b600061074b826108f2565b610755818561090e565b935061076581856020860161098b565b80840191505092915050565b600061077e601583610919565b915061078982610a51565b602082019050919050565b60006107a1600d83610919565b91506107ac82610a7a565b602082019050919050565b60006107c4600e83610919565b91506107cf82610aa3565b602082019050919050565b6107e381610972565b82525050565b60006107f582856106d7565b60208201915061080582846106d7565b6020820191508190509392505050565b600061082282848661071b565b91508190509392505050565b600061083a8284610740565b915081905092915050565b600060208201905061085a60008301846106c8565b92915050565b6000602082019050818103600083015261087981610771565b9050919050565b6000602082019050818103600083015261089981610794565b9050919050565b600060208201905081810360008301526108b9816107b7565b9050919050565b60006040820190506108d560008301866107da565b81810360208301526108e88184866106ee565b9050949350505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061093582610952565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156109a957808201518184015260208101905061098e565b838111156109b8576000848401525b50505050565b60006109c982610972565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109fc576109fb610a11565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f53637269707420616c7265616479207370656e742e0000000000000000000000600082015250565b7f536372697074206661696c656400000000000000000000000000000000000000600082015250565b7f496e76616c69642070726f6f662e000000000000000000000000000000000000600082015250565b610ad58161092a565b8114610ae057600080fd5b50565b610aec8161093c565b8114610af757600080fd5b50565b610b0381610972565b8114610b0e57600080fd5b5056fea264697066735822122087273dfe41ffcf2182ec265157bd8d5a6567e29782bf65961068dee6b8bcaffc64736f6c63430008040033";

type ScriptTreeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScriptTreeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScriptTree__factory extends ContractFactory {
  constructor(...args: ScriptTreeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _scriptsRoot: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ScriptTree> {
    return super.deploy(_scriptsRoot, overrides || {}) as Promise<ScriptTree>;
  }
  getDeployTransaction(
    _scriptsRoot: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_scriptsRoot, overrides || {});
  }
  attach(address: string): ScriptTree {
    return super.attach(address) as ScriptTree;
  }
  connect(signer: Signer): ScriptTree__factory {
    return super.connect(signer) as ScriptTree__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScriptTreeInterface {
    return new utils.Interface(_abi) as ScriptTreeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScriptTree {
    return new Contract(address, _abi, signerOrProvider) as ScriptTree;
  }
}
