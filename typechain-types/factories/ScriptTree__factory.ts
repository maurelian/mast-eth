/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
<<<<<<< HEAD
  PayableOverrides,
=======
  Overrides,
>>>>>>> 09bc438 (chore: Add typechain)
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ScriptTree, ScriptTreeInterface } from "../ScriptTree";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_conditionsRoot",
        type: "bytes32",
      },
    ],
<<<<<<< HEAD
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "scriptHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ScriptSpent",
    type: "event",
  },
  {
=======
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
>>>>>>> 09bc438 (chore: Add typechain)
    inputs: [],
    name: "conditionsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
<<<<<<< HEAD
    inputs: [],
    name: "lastAction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numActions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
=======
>>>>>>> 09bc438 (chore: Add typechain)
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_script",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "spend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
<<<<<<< HEAD
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405260405161121438038061121483398181016040528101906100259190610048565b806080818152505050610092565b6000815190506100428161007b565b92915050565b60006020828403121561005a57600080fd5b600061006884828501610033565b91505092915050565b6000819050919050565b61008481610071565b811461008f57600080fd5b50565b6080516111606100b4600039600081816101fd015261034e01526111606000f3fe60806040526004361061004e5760003560e01c8063506623c71461005a578063511e140d146100885780638514668f146100b357806389f71d53146100de578063c3a702761461010c57610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f610135565b60405161007f9493929190610ddf565b60405180910390f35b34801561009457600080fd5b5061009d6101fb565b6040516100aa9190610e2b565b60405180910390f35b3480156100bf57600080fd5b506100c861021f565b6040516100d59190610e86565b60405180910390f35b3480156100ea57600080fd5b506100f3610225565b6040516101039493929190610ddf565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e9190610b48565b6102eb565b005b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461017290610f9f565b80601f016020809104026020016040519081016040528092919081815260200182805461019e90610f9f565b80156101eb5780601f106101c0576101008083540402835291602001916101eb565b820191906000526020600020905b8154815290600101906020018083116101ce57829003601f168201915b5050505050908060030154905084565b7f000000000000000000000000000000000000000000000000000000000000000081565b60085481565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461026290610f9f565b80601f016020809104026020016040519081016040528092919081815260200182805461028e90610f9f565b80156102db5780601f106102b0576101008083540402835291602001916102db565b820191906000526020600020905b8154815290600101906020018083116102be57829003601f168201915b5050505050908060030154905084565b600084846040516102fd929190610daf565b60405180910390209050610373838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f000000000000000000000000000000000000000000000000000000000000000083610812565b6103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610e66565b60405180910390fd5b60405180608001604052808a73ffffffffffffffffffffffffffffffffffffffff16815260200189815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815250600460008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061049d929190610905565b506060820151816003015590505060006104fa86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506108ee565b90506000808273ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc0406226000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105a69190610dc8565b600060405180830381855af49150503d80600081146105e1576040519150601f19603f3d011682016040523d82523d6000602084013e6105e6565b606091505b50915091506000818060200190518101906106019190610c14565b905082801561060d5750805b61064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064390610e46565b60405180910390fd5b8c73ffffffffffffffffffffffffffffffffffffffff168c8c8c604051610674929190610daf565b60006040518083038185875af1925050503d80600081146106b1576040519150601f19603f3d011682016040523d82523d6000602084013e6106b6565b606091505b5050506004600080820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282018160020190805461074190610f9f565b61074c92919061098b565b5060038201548160030155905050426000600301819055506004600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006107a69190610a18565b600382016000905550508c73ffffffffffffffffffffffffffffffffffffffff16857fdbc943c79a3d5098d686bd8ced8c088938fd3948d584fdbb6a38484d422e24e48e8e8e6040516107fb93929190610ea1565b60405180910390a350505050505050505050505050565b60008082905060005b85518110156108e057600086828151811061085f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116108a0578281604051602001610883929190610d83565b6040516020818303038152906040528051906020012092506108cc565b80836040516020016108b3929190610d83565b6040516020818303038152906040528051906020012092505b5080806108d890610fd1565b91505061081b565b508381149150509392505050565b6000808251602084016000f0905080915050919050565b82805461091190610f9f565b90600052602060002090601f016020900481019282610933576000855561097a565b82601f1061094c57805160ff191683800117855561097a565b8280016001018555821561097a579182015b8281111561097957825182559160200191906001019061095e565b5b5090506109879190610a58565b5090565b82805461099790610f9f565b90600052602060002090601f0160209004810192826109b95760008555610a07565b82601f106109ca5780548555610a07565b82800160010185558215610a0757600052602060002091601f016020900482015b82811115610a065782548255916001019190600101906109eb565b5b509050610a149190610a58565b5090565b508054610a2490610f9f565b6000825580601f10610a365750610a55565b601f016020900490600052602060002090810190610a549190610a58565b5b50565b5b80821115610a71576000816000905550600101610a59565b5090565b600081359050610a84816110e5565b92915050565b60008083601f840112610a9c57600080fd5b8235905067ffffffffffffffff811115610ab557600080fd5b602083019150836020820283011115610acd57600080fd5b9250929050565b600081519050610ae3816110fc565b92915050565b60008083601f840112610afb57600080fd5b8235905067ffffffffffffffff811115610b1457600080fd5b602083019150836001820283011115610b2c57600080fd5b9250929050565b600081359050610b4281611113565b92915050565b60008060008060008060008060a0898b031215610b6457600080fd5b6000610b728b828c01610a75565b9850506020610b838b828c01610b33565b975050604089013567ffffffffffffffff811115610ba057600080fd5b610bac8b828c01610ae9565b9650965050606089013567ffffffffffffffff811115610bcb57600080fd5b610bd78b828c01610ae9565b9450945050608089013567ffffffffffffffff811115610bf657600080fd5b610c028b828c01610a8a565b92509250509295985092959890939650565b600060208284031215610c2657600080fd5b6000610c3484828501610ad4565b91505092915050565b610c4681610f0b565b82525050565b610c5581610f29565b82525050565b610c6c610c6782610f29565b61101a565b82525050565b6000610c7e8385610ede565b9350610c8b838584610f5d565b610c9483611082565b840190509392505050565b6000610cab8385610eef565b9350610cb8838584610f5d565b82840190509392505050565b6000610ccf82610ed3565b610cd98185610ede565b9350610ce9818560208601610f6c565b610cf281611082565b840191505092915050565b6000610d0882610ed3565b610d128185610eef565b9350610d22818560208601610f6c565b80840191505092915050565b6000610d3b600d83610efa565b9150610d4682611093565b602082019050919050565b6000610d5e600e83610efa565b9150610d69826110bc565b602082019050919050565b610d7d81610f53565b82525050565b6000610d8f8285610c5b565b602082019150610d9f8284610c5b565b6020820191508190509392505050565b6000610dbc828486610c9f565b91508190509392505050565b6000610dd48284610cfd565b915081905092915050565b6000608082019050610df46000830187610c3d565b610e016020830186610d74565b8181036040830152610e138185610cc4565b9050610e226060830184610d74565b95945050505050565b6000602082019050610e406000830184610c4c565b92915050565b60006020820190508181036000830152610e5f81610d2e565b9050919050565b60006020820190508181036000830152610e7f81610d51565b9050919050565b6000602082019050610e9b6000830184610d74565b92915050565b6000604082019050610eb66000830186610d74565b8181036020830152610ec9818486610c72565b9050949350505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610f1682610f33565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f8a578082015181840152602081019050610f6f565b83811115610f99576000848401525b50505050565b60006002820490506001821680610fb757607f821691505b60208210811415610fcb57610fca611053565b5b50919050565b6000610fdc82610f53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561100f5761100e611024565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f536372697074206661696c656400000000000000000000000000000000000000600082015250565b7f496e76616c69642070726f6f662e000000000000000000000000000000000000600082015250565b6110ee81610f0b565b81146110f957600080fd5b50565b61110581610f1d565b811461111057600080fd5b50565b61111c81610f53565b811461112757600080fd5b5056fea26469706673582212203fb17def91e398cbb8f52319c6640a4bf47275c4b4a3a0233921f83567cbbdb464736f6c63430008040033";
=======
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a54380380610a5483398181016040528101906100329190610055565b80608081815250505061009f565b60008151905061004f81610088565b92915050565b60006020828403121561006757600080fd5b600061007584828501610040565b91505092915050565b6000819050919050565b6100918161007e565b811461009c57600080fd5b50565b6080516109946100c0600039600081816077015261010d01526109946000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063511e140d1461003b578063c3a7027614610059575b600080fd5b610043610075565b60405161005091906106e9565b60405180910390f35b610073600480360381019061006e91906104e7565b610099565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600084846040516020016100ae929190610704565b604051602081830303815290604052805190602001209050610132838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050507f000000000000000000000000000000000000000000000000000000000000000083610321565b610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016890610748565b60405180910390fd5b60006101c086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506103fd565b90506000808273ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc0406226000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161026c91906106d2565b600060405180830381855af49150503d80600081146102a7576040519150601f19603f3d011682016040523d82523d6000602084013e6102ac565b606091505b50915091506000818060200190518101906102c791906105b3565b90508280156102d35750805b610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030990610728565b60405180910390fd5b50505050505050505050505050565b60008082905060005b85518110156103ef57600086828151811061036e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116103af5782816040516020016103929291906106a6565b6040516020818303038152906040528051906020012092506103db565b80836040516020016103c29291906106a6565b6040516020818303038152906040528051906020012092505b5080806103e790610834565b91505061032a565b508381149150509392505050565b6000808251602084016000f0905080915050919050565b60008135905061042381610919565b92915050565b60008083601f84011261043b57600080fd5b8235905067ffffffffffffffff81111561045457600080fd5b60208301915083602082028301111561046c57600080fd5b9250929050565b60008151905061048281610930565b92915050565b60008083601f84011261049a57600080fd5b8235905067ffffffffffffffff8111156104b357600080fd5b6020830191508360018202830111156104cb57600080fd5b9250929050565b6000813590506104e181610947565b92915050565b60008060008060008060008060a0898b03121561050357600080fd5b60006105118b828c01610414565b98505060206105228b828c016104d2565b975050604089013567ffffffffffffffff81111561053f57600080fd5b61054b8b828c01610488565b9650965050606089013567ffffffffffffffff81111561056a57600080fd5b6105768b828c01610488565b9450945050608089013567ffffffffffffffff81111561059557600080fd5b6105a18b828c01610429565b92509250509295985092959890939650565b6000602082840312156105c557600080fd5b60006105d384828501610473565b91505092915050565b6105e5816107be565b82525050565b6105fc6105f7826107be565b61087d565b82525050565b600061060e8385610773565b935061061b8385846107f2565b610624836108b6565b840190509392505050565b600061063a82610768565b6106448185610784565b9350610654818560208601610801565b80840191505092915050565b600061066d600d8361078f565b9150610678826108c7565b602082019050919050565b6000610690600e8361078f565b915061069b826108f0565b602082019050919050565b60006106b282856105eb565b6020820191506106c282846105eb565b6020820191508190509392505050565b60006106de828461062f565b915081905092915050565b60006020820190506106fe60008301846105dc565b92915050565b6000602082019050818103600083015261071f818486610602565b90509392505050565b6000602082019050818103600083015261074181610660565b9050919050565b6000602082019050818103600083015261076181610683565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006107ab826107c8565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561081f578082015181840152602081019050610804565b8381111561082e576000848401525b50505050565b600061083f826107e8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561087257610871610887565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f536372697074206661696c656400000000000000000000000000000000000000600082015250565b7f496e76616c69642070726f6f662e000000000000000000000000000000000000600082015250565b610922816107a0565b811461092d57600080fd5b50565b610939816107b2565b811461094457600080fd5b50565b610950816107e8565b811461095b57600080fd5b5056fea2646970667358221220bb4cb321657944b684973686ed73d475637fba948f58103302e5dea0929070fd64736f6c63430008040033";
>>>>>>> 09bc438 (chore: Add typechain)

type ScriptTreeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScriptTreeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScriptTree__factory extends ContractFactory {
  constructor(...args: ScriptTreeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _conditionsRoot: BytesLike,
<<<<<<< HEAD
    overrides?: PayableOverrides & { from?: string | Promise<string> }
=======
    overrides?: Overrides & { from?: string | Promise<string> }
>>>>>>> 09bc438 (chore: Add typechain)
  ): Promise<ScriptTree> {
    return super.deploy(
      _conditionsRoot,
      overrides || {}
    ) as Promise<ScriptTree>;
  }
  getDeployTransaction(
    _conditionsRoot: BytesLike,
<<<<<<< HEAD
    overrides?: PayableOverrides & { from?: string | Promise<string> }
=======
    overrides?: Overrides & { from?: string | Promise<string> }
>>>>>>> 09bc438 (chore: Add typechain)
  ): TransactionRequest {
    return super.getDeployTransaction(_conditionsRoot, overrides || {});
  }
  attach(address: string): ScriptTree {
    return super.attach(address) as ScriptTree;
  }
  connect(signer: Signer): ScriptTree__factory {
    return super.connect(signer) as ScriptTree__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScriptTreeInterface {
    return new utils.Interface(_abi) as ScriptTreeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScriptTree {
    return new Contract(address, _abi, signerOrProvider) as ScriptTree;
  }
}
