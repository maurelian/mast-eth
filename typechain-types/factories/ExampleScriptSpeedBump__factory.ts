/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleScriptSpeedBump,
  ExampleScriptSpeedBumpInterface,
} from "../ExampleScriptSpeedBump";

const _abi = [
  {
    inputs: [],
    name: "lastAction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numActions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105c6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063506623c7146100515780638514668f1461007257806389f71d5314610090578063c0406226146100b1575b600080fd5b6100596100cf565b6040516100699493929190610348565b60405180910390f35b61007a610195565b60405161008791906103cf565b60405180910390f35b61009861019b565b6040516100a89493929190610348565b60405180910390f35b6100b9610261565b6040516100c69190610394565b60405180910390f35b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461010c906104c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610138906104c6565b80156101855780601f1061015a57610100808354040283529160200191610185565b820191906000526020600020905b81548152906001019060200180831161016857829003601f168201915b5050505050908060030154905084565b60085481565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546101d8906104c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610204906104c6565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b5050505050908060030154905084565b600062015180600060030154426102789190610417565b116102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af906103af565b60405180910390fd5b6001905090565b6102c88161044b565b82525050565b6102d78161045d565b82525050565b60006102e8826103ea565b6102f281856103f5565b9350610302818560208601610493565b61030b81610556565b840191505092915050565b6000610323601883610406565b915061032e82610567565b602082019050919050565b61034281610489565b82525050565b600060808201905061035d60008301876102bf565b61036a6020830186610339565b818103604083015261037c81856102dd565b905061038b6060830184610339565b95945050505050565b60006020820190506103a960008301846102ce565b92915050565b600060208201905081810360008301526103c881610316565b9050919050565b60006020820190506103e46000830184610339565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061042282610489565b915061042d83610489565b9250828210156104405761043f6104f8565b5b828203905092915050565b600061045682610469565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156104b1578082015181840152602081019050610496565b838111156104c0576000848401525b50505050565b600060028204905060018216806104de57607f821691505b602082108114156104f2576104f1610527565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f547279696e6720746f207370656e6420746f6f20736f6f6e000000000000000060008201525056fea2646970667358221220d04efbcef3ed542fa0547dc476bb184b35a1181e05a1d89c229369e7b66fdd1d64736f6c63430008040033";

type ExampleScriptSpeedBumpConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleScriptSpeedBumpConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleScriptSpeedBump__factory extends ContractFactory {
  constructor(...args: ExampleScriptSpeedBumpConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleScriptSpeedBump> {
    return super.deploy(overrides || {}) as Promise<ExampleScriptSpeedBump>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExampleScriptSpeedBump {
    return super.attach(address) as ExampleScriptSpeedBump;
  }
  connect(signer: Signer): ExampleScriptSpeedBump__factory {
    return super.connect(signer) as ExampleScriptSpeedBump__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleScriptSpeedBumpInterface {
    return new utils.Interface(_abi) as ExampleScriptSpeedBumpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleScriptSpeedBump {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExampleScriptSpeedBump;
  }
}
